name: Publish - Production

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check if the invoker is a member of the admin team
        run: |
          echo ${{ secrets.GH_CLI_LOGIN_TOKEN }} | gh auth login --with-token

          team_members=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/organizations/6154722/team/9355952/members)

          # Extract usernames from the API response
          usernames=$(echo "$team_members" | jq -r '.[].login')

          # Check if github.actor is in the list
          if [[ "$usernames" != *"${{ github.actor }}"* ]]; then
            echo "${{ github.actor }} you shall not pass!"
            exit 1
          fi

      - name: Install tools used for deployment
        run: |
          npm install -g tfx-cli node-jq

      - name: Prepare extension package
        working-directory: 'RetrospectiveExtension.Frontend'
        env:
          REACT_APP_COLLABORATION_STATE_SERVICE_URL: ${{ secrets.BACKEND_WEBAPP }}
          REACT_APP_APP_INSIGHTS_INSTRUMENTATION_KEY: ${{ secrets.AI_INSTRUMENTATION_KEY }}
        run: |
          npm install
          npm run build:p
          npm run pack:p

      - name: Publish extension
        working-directory: 'RetrospectiveExtension.Frontend'
        run: >
          ext_info=$(tfx extension show --no-prompt --json --publisher "ms-devlabs" --extensionId "team-retrospectives" --token ${{ secrets.AZURE_DEVOPS_TOKEN }})

          if [[ "$ext_info" != "null" ]]; then
            version=$(jq -r '.versions[0].version' <<< "$ext_info")
            echo "Updating extension version to $version"
            cat <<< $(jq ".version = \"$version\"" vss-extension-prod.json) > vss-extension-prod.json
            echo "content of the manifest file:"
            cat vss-extension-prod.json
          fi

          tfx extension publish --manifests vss-extension-prod.json --vsix ./dist/*.vsix --token "${{ secrets.AZURE_DEVOPS_TOKEN }}"
