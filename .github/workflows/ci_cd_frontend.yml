name: "CI and CD for Frontend"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    name: Frontend - Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Check out repository

      - uses: actions/setup-node@v4
        name: Setup node
        with:
          node-version: "18"

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            src:
              - "RetrospectiveExtension.Frontend/**"

      - if: steps.changes.outputs.src == 'true'
        name: Install tools used for deployment
        run: |
          npm install -g tfx-cli node-jq

      - if: steps.changes.outputs.src == 'true'
        name: "Install dependencies"
        run: npm install
        working-directory: "RetrospectiveExtension.Frontend"

      - if: steps.changes.outputs.src == 'true'
        name: "Lint node files"
        run: npm run lint
        working-directory: "RetrospectiveExtension.Frontend"

      - if: steps.changes.outputs.src == 'true'
        name: "Run tests"
        run: npm test
        working-directory: "RetrospectiveExtension.Frontend"

      - if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: jest-test-results
          path: RetrospectiveExtension.Frontend/reports/jest-junit.xml

      - name: Markdown lint
        run: |
          npm install markdownlint-cli2 --global
          markdownlint-cli2 "**/*.md" --config ".github/.markdownlint.json" "#RetrospectiveExtension.Frontend/node_modules"

      - name: Spell check
        run: |
          wget https://raw.githubusercontent.com/tbroadley/spellchecker-cli/master/dictionaries/base.txt
          echo "" >> base.txt
          echo "emailable" >> base.txt
          echo "anonymize" >> base.txt
          echo "pre-populated" >> base.txt
          echo "favorability" >> base.txt
          echo "Dev" >> base.txt
          echo "tooltip" >> base.txt
          echo "outloud" >> base.txt
          echo "timebox" >> base.txt
          echo "uncast" >> base.txt
          echo "PRs" >> base.txt
          echo "CodeCov" >> base.txt
          echo "Backend" >> base.txt
          echo "WIP" >> base.txt
          echo "OKR" >> base.txt
          echo "OKRs" >> base.txt
          echo "CSV" >> base.txt
          echo "GitHub" >> base.txt
          echo "DevOps" >> base.txt
          echo "Frontend" >> base.txt
          echo "ERD" >> base.txt
          echo "Changelog" >> base.txt
          echo "changelog" >> base.txt
          echo "ReactTable" >> base.txt
          echo "README" >> base.txt
          echo "OpenSSF" >> base.txt
          npx -y spellchecker-cli --config ./.github/.spellcheckerrc.yaml

      - if: steps.changes.outputs.src == 'true'
        name: OpenSSF Score Card
        run: |
          #!/bin/bash
          set -e
          docker run -e GITHUB_AUTH_TOKEN=${{ github.token }} gcr.io/openssf/scorecard:stable --repo=https://github.com/microsoft/vsts-extension-retrospectives || true

      - if: steps.changes.outputs.src == 'true'
        name: Code Coverage for CodeCov
        uses: codecov/codecov-action@v4.5.0
        with:
          name: Codecov Run
          files: coverage/coverage-final.json

      - if: steps.changes.outputs.src == 'true'
        name: Prepare vss-extension-dev.json
        working-directory: 'RetrospectiveExtension.Frontend'
        run: |
          cp vss-extension-dev.json.template vss-extension-dev.json

          scripts/update_ext_manifest.sh \
            "vss-extension-dev.json" \
            "enginpolat" \
            "retrospective-vsts-extension-dev" \
            "${{ secrets.AZURE_DEVOPS_TOKEN }}"

      - if: steps.changes.outputs.src == 'true'
        name: Prepare extension package
        working-directory: 'RetrospectiveExtension.Frontend'
        env:
          REACT_APP_COLLABORATION_STATE_SERVICE_URL: ${{ secrets.BACKEND_WEBAPP }}
          REACT_APP_APP_INSIGHTS_INSTRUMENTATION_KEY: ${{ secrets.AI_INSTRUMENTATION_KEY }}
        run: |
          npm install
          npm run build:p
          npm run pack:d

      - if: steps.changes.outputs.src == 'true'
        name: Publish extension
        working-directory: 'RetrospectiveExtension.Frontend'
        run: >
          tfx extension publish
          --manifests vss-extension-dev.json
          --vsix ./dist/*.vsix
          --token "${{ secrets.AZURE_DEVOPS_TOKEN }}"
